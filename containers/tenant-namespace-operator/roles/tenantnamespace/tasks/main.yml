---
# tasks file for tenantnamespace

- name: Create the k8s admin namespace
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ meta.name }}-admin"
        labels:
          name: "{{ meta.name }}-admin"
          miscscripts.pnnl.gov/namespace-type: admin

- name: Set initial defaults. They be overridden.
  set_fact:
    merged_values:
      magicnamespace:
        tiller:
          enabled: false
- name: Load in Flavor values if referenced
  block:
  - name: Fetch referenced flavor
    k8s_info:
      api_version: miscscripts.pnnl.gov/v1beta1
      kind: TenantNamespaceFlavor
      name: "{{ flavor_ref.name }}"
    register: flavor
    # Failures immediately trigger another reconciliation
    failed_when:
    - flavor.resources | length == 0
  - name: Merge in flavor values
    set_fact:
      merged_values: "{{ merged_values | combine(flavor.resources[0].spec, recursive=True) }}"
  when:
  - flavor_ref is defined
  - flavor_ref.kind == "TenantNamespaceFlavor"
  - flavor_ref.group == "miscscripts.pnnl.gov"
- name: Set value for forced settings
  set_fact:
    overrides:
      namespace: "{{ meta.name }}"
      magicnamespace:
        namespace: "{{ meta.name }}"
      ingress:
        controller:
          scope:
            namespace: "{{ meta.name }}"
- name: Set values from CR
  set_fact:
    merged_values: "{{ merged_values | combine(_miscscripts_pnnl_gov_tenantnamespace_spec, recursive=True) }}"
- name: Force namespace settings. Can not be overridden.
  set_fact:
    merged_values: "{{ merged_values | combine(overrides, recursive=True) }}"

#FIXME Consider making a service account specifically for this so it can't cross namespaces as far as it can today
- name: Run Helm
  helm:
    name: "{{ meta.name }}"
    namespace: "{{ meta.name }}-admin"
    chart_ref: ${HOME}/tenant-namespace
    values: "{{ merged_values }}"
  register: objs

- name: Create the k8s user namespace
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ meta.name }}"
        labels:
          name: "{{ meta.name }}"
          miscscripts.pnnl.gov/namespace-type: user

